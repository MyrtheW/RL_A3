%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.18
%%CreationDate: Sun May 02 12:51:52 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACACGAUUAGACUUAGAAUGAUUGUCGUGGAAUCUGGUUCUUUCCCGAGGGACUUUUAUGAAAAUGACCAGAGGCGGGACAAUUAUUGGUGGCAGAUAAAUUAUCAUUAGAUCUAAUGACCCCUUGUGGUUAGGUGCACUCCUCUAAAUCCAAUUGAGAGGAUGUUCAUCAGCUAACA\
) } def
/len { sequence length } bind def

/coor [
[154.05952454 208.65864563]
[139.93566895 214.60487366]
[125.17507172 218.72384644]
[110.01307678 220.94987488]
[94.69144440 221.24749756]
[79.45444489 219.61193848]
[64.54502869 216.06929016]
[50.20090103 210.67604065]
[36.65077209 203.51817322]
[24.11068153 194.70980835]
[12.78057003 184.39138794]
[2.84108281 172.72743225]
[-5.54930353 159.90391541]
[-12.25681305 146.12530518]
[-17.17450142 131.61125183]
[-20.22396278 116.59320068]
[-21.35657310 101.31058502]
[-20.55427551 86.00708008]
[-17.82986450 70.92666626]
[-32.14321136 66.44023132]
[-46.45655441 61.95378876]
[-60.76990128 57.46735001]
[-75.08324432 52.98091125]
[-89.39659119 48.49446869]
[-103.70993805 44.00802994]
[-118.02328491 39.52159119]
[-132.33662415 35.03514862]
[-146.64997864 30.54870987]
[-162.13261414 33.80424500]
[-171.96307373 22.61445808]
[-186.27641296 18.12801743]
[-197.43057251 25.70656395]
[-210.71890259 25.47190094]
[-221.28419495 17.73429489]
[-225.39392090 5.50551271]
[-239.62724304 0.77132612]
[-253.86056519 -3.96286058]
[-268.09387207 -8.69704723]
[-282.32720947 -13.43123341]
[-296.56051636 -18.16542053]
[-310.79385376 -22.89960670]
[-328.72622681 -18.77015686]
[-339.87350464 -32.30909729]
[-354.18682861 -36.79553986]
[-368.50018311 -41.28197861]
[-382.81353760 -45.76841736]
[-392.25549316 -33.88507462]
[-405.35458374 -26.21839333]
[-420.33929443 -23.80522728]
[-435.18301392 -26.97193909]
[-447.87829590 -35.29025650]
[-456.70819092 -47.63519287]
[-460.47851562 -62.33720016]
[-458.67938232 -77.40795135]
[-451.55410767 -90.80925751]
[-440.06631470 -100.72868347]
[-425.76965332 -105.82472992]
[-410.59759521 -105.40818787]
[-396.60208130 -99.53539276]
[-385.67584229 -89.00058746]
[-379.29660034 -75.22853088]
[-378.32708740 -60.08176422]
[-364.01373291 -55.59532547]
[-349.70040894 -51.10888290]
[-335.38705444 -46.62244415]
[-324.50781250 -51.94951248]
[-312.53457642 -48.30849075]
[-306.05966187 -37.13293076]
[-291.82635498 -32.39874268]
[-277.59301758 -27.66455650]
[-263.35971069 -22.93037033]
[-249.12637329 -18.19618416]
[-234.89305115 -13.46199703]
[-220.65972900 -8.72780991]
[-205.97235107 -16.89549446]
[-189.59591675 -11.82616520]
[-181.78997803 3.81467175]
[-167.47662354 8.30111217]
[-153.01777649 4.72467804]
[-142.16352844 16.23536491]
[-127.85018921 20.72180367]
[-113.53684235 25.20824432]
[-99.22349548 29.69468498]
[-84.91014862 34.18112564]
[-70.59680939 38.66756439]
[-56.28345871 43.15400314]
[-41.97011566 47.64044571]
[-27.65676880 52.12688446]
[-13.34342384 56.61332321]
[-7.65984535 43.97774506]
[-0.57316387 32.07228851]
[7.82426119 21.05211449]
[17.42298889 11.06084919]
[28.09791946 2.22870374]
[39.70993423 -5.32921362]
[52.10768890 -11.51440334]
[65.12961578 -16.24625397]
[78.60599518 -19.46309853]
[92.36119843 -21.12301254]
[106.21595764 -21.20436096]
[119.98970795 -19.70608521]
[133.50292969 -16.64771271]
[146.57952881 -12.06909943]
[159.04905701 -6.02991962]
[170.74902344 1.39112043]
[181.52693176 10.09730434]
[192.27070618 -0.37032989]
[203.01448059 -10.83796406]
[213.75825500 -21.30559731]
[224.50201416 -31.77323151]
[235.24578857 -42.24086380]
[239.17283630 -58.16287231]
[254.99832153 -62.46242523]
[266.44235229 -50.71651459]
[261.73226929 -35.00832367]
[245.71342468 -31.49709320]
[234.96965027 -21.02945900]
[224.22587585 -10.56182575]
[213.48211670 -0.09419166]
[202.73834229 10.37344265]
[191.99456787 20.84107590]
[201.59265137 33.60672379]
[209.43132019 47.52219391]
[215.37481689 62.34650040]
[219.32020569 77.82290649]
[221.19915771 93.68338013]
[220.97912598 109.65324402]
[218.66394043 125.45593262]
[214.29368591 140.81776428]
[207.94403076 155.47270203]
[199.72497559 169.16694641]
[211.49867249 178.46101379]
[223.27238464 187.75509644]
[235.04609680 197.04916382]
[246.81979370 206.34324646]
[262.44580078 208.82078552]
[267.64157104 222.77976990]
[279.41525269 232.07385254]
[291.58105469 240.84844971]
[304.11602783 249.08705139]
[313.03240967 251.19441223]
[316.79531860 257.57901001]
[329.18542480 266.03393555]
[341.57550049 274.48886108]
[353.96560669 282.94378662]
[366.35568237 291.39871216]
[378.74575806 299.85360718]
[394.50601196 301.24118042]
[400.65759277 314.80612183]
[413.04769897 323.26104736]
[425.43777466 331.71597290]
[441.92907715 335.64956665]
[442.71444702 352.58529663]
[426.65798950 358.02825928]
[416.98284912 344.10604858]
[404.59277344 335.65112305]
[392.20266724 327.19619751]
[377.32864380 326.41339111]
[370.29086304 312.24371338]
[357.90075684 303.78878784]
[345.51068115 295.33386230]
[333.12057495 286.87893677]
[320.73049927 278.42401123]
[308.34039307 269.96908569]
[295.87741089 261.62200928]
[283.34243774 253.38342285]
[283.62228394 268.38079834]
[272.18579102 278.08682251]
[257.43353271 275.37200928]
[250.20158386 262.23049927]
[255.80213928 248.31526184]
[270.12118530 243.84754944]
[258.34747314 234.55348206]
[243.56359863 232.74072266]
[237.52572632 218.11694336]
[225.75201416 208.82287598]
[213.97831726 199.52879333]
[202.20460510 190.23472595]
[190.43089294 180.94064331]
[179.51004028 191.69126892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 89]
[20 88]
[21 87]
[22 86]
[23 85]
[24 84]
[25 83]
[26 82]
[27 81]
[28 80]
[30 78]
[31 77]
[35 74]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[43 65]
[44 64]
[45 63]
[46 62]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[131 179]
[132 178]
[133 177]
[134 176]
[135 175]
[137 173]
[138 172]
[139 166]
[140 165]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
[147 159]
[149 157]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
