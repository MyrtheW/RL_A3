%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.18
%%CreationDate: Mon May 03 04:47:25 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUACGAACUUGCCUAUUAUUUAGUACUAUAGACAGGUUACAUGAGCCCAGAGUUUCGAGUAUUAAGGUAACGUACCUGCAUAUUGUAGCAGUGGCUUGUUGGAUAAAAUUAGUCAAGUCGAAGCGUCUCUGGACCAUCUAGAUUCGUAACUGGUUUGCGAAUUUUCGAAAAUAGUCUAA\
) } def
/len { sequence length } bind def

/coor [
[163.09982300 528.17175293]
[169.92504883 520.67480469]
[162.68962097 507.53521729]
[155.45419312 494.39566040]
[148.21876526 481.25607300]
[140.98333740 468.11648560]
[133.74790955 454.97689819]
[126.51247406 441.83734131]
[126.43772888 456.83715820]
[122.01170349 471.16928101]
[113.61560059 483.59930420]
[101.97259521 493.05661011]
[88.08551025 498.72659302]
[73.15045929 500.12094116]
[58.45380783 497.11953735]
[45.26139832 489.98086548]
[34.70951462 479.31982422]
[27.70699310 466.05465698]
[24.85697174 451.32791138]
[26.40492630 436.40798950]
[32.21753311 422.57998657]
[41.79413986 411.03491211]
[54.30990601 402.76718140]
[68.68682861 398.48886108]
[83.68662262 398.56848145]
[98.01731873 402.99917603]
[110.44461823 411.39932251]
[119.89692688 423.04336548]
[110.07790375 411.84353638]
[115.31568146 396.91448975]
[112.72520447 382.13989258]
[110.13471985 367.36526489]
[107.54424286 352.59063721]
[97.81470490 345.37457275]
[95.54833984 333.06689453]
[102.50028229 322.18167114]
[100.16662598 307.36431885]
[97.83296967 292.54696655]
[90.24653625 305.48706055]
[76.92499542 312.38174438]
[61.97958374 311.10321045]
[50.02268219 302.04602051]
[44.74438095 288.00537109]
[47.77363586 273.31445312]
[58.17557907 262.50704956]
[72.74001312 258.91854858]
[86.97211456 263.65640259]
[96.47992706 275.25903320]
[96.47992706 260.25903320]
[96.47992706 245.25903320]
[96.47992706 230.25903320]
[96.47992706 215.25903320]
[96.47992706 200.25903320]
[96.08943939 185.26411438]
[95.30873108 170.28443909]
[94.52803040 155.30477905]
[93.74732208 140.32510376]
[92.96661377 125.34543610]
[92.18591309 110.36576843]
[86.11659241 96.64850616]
[75.55611420 85.99597931]
[64.99563599 75.34345245]
[50.38236237 79.89437103]
[35.33013153 77.12148285]
[23.29783249 67.66197205]
[17.05039978 53.68956375]
[18.02344894 38.41501999]
[25.99337769 25.34831238]
[39.12875748 17.49208069]
[54.41117096 16.65162659]
[68.32883453 23.02008057]
[77.68357086 35.13401794]
[80.32572937 50.20974731]
[75.64816284 64.78297424]
[86.20864105 75.43550110]
[96.76911163 86.08802795]
[109.97099304 78.96689606]
[106.86929321 64.29108429]
[103.76760101 49.61527252]
[100.66590118 34.93946075]
[86.44328308 28.73489571]
[78.61293793 15.33843040]
[80.18579865 -0.09872434]
[90.55706787 -11.64066601]
[105.73877716 -14.84928226]
[119.89325714 -8.49079514]
[127.57781219 4.98982763]
[125.83758545 20.40901184]
[115.34172058 31.83776474]
[118.44341278 46.51357651]
[121.54511261 61.18939209]
[124.64680481 75.86520386]
[132.02259827 77.22450256]
[141.75274658 65.80853271]
[146.77418518 79.94309998]
[154.14997864 81.30239868]
[162.27947998 68.69641113]
[170.40899658 56.09041977]
[178.53851318 43.48442841]
[169.59228516 31.22353935]
[165.68309021 16.55784225]
[167.33963013 1.47075105]
[174.33786011 -11.99732876]
[185.73133850 -22.02495003]
[199.97917175 -27.25596046]
[215.15447998 -26.98290825]
[229.20491028 -21.24271965]
[240.23027039 -10.81171036]
[246.73945618 2.89941192]
[247.85217285 18.03633118]
[243.41790771 32.55190277]
[234.03639221 44.48301315]
[220.97636414 52.21608353]
[206.00411987 54.70527267]
[191.14450073 51.61394119]
[183.01498413 64.21993256]
[174.88548279 76.82592010]
[166.75596619 89.43191528]
[107.16558075 109.58506012]
[107.94628906 124.56473541]
[108.72698975 139.54440308]
[109.50769806 154.52407837]
[110.28840637 169.50373840]
[111.06910706 184.48341370]
[113.94398499 188.90469360]
[114.73734283 193.52378845]
[113.72621155 197.50828552]
[111.47992706 200.25903320]
[111.47992706 215.25903320]
[111.47992706 230.25903320]
[111.47992706 245.25903320]
[111.47992706 260.25903320]
[111.47992706 275.25903320]
[112.65032196 290.21328735]
[114.98397827 305.03067017]
[117.31764221 319.84802246]
[129.22360229 333.87908936]
[122.31887054 350.00015259]
[124.90934753 364.77478027]
[127.49982452 379.54940796]
[130.09030151 394.32403564]
[140.09461975 406.58062744]
[134.67155457 420.45288086]
[139.65205383 434.60189819]
[146.88748169 447.74148560]
[154.12290955 460.88107300]
[161.35833740 474.02062988]
[168.59376526 487.16021729]
[175.82920837 500.29980469]
[183.06463623 513.43939209]
[203.52342224 512.64007568]
[221.51512146 522.25256348]
[232.14404297 539.57409668]
[232.56193542 559.81658936]
[222.73091125 577.42962646]
[231.29302979 589.74584961]
[239.85516357 602.06213379]
[254.08538818 608.97668457]
[254.99725342 623.84332275]
[263.55938721 636.15960693]
[272.12152100 648.47583008]
[287.18295288 654.96313477]
[288.82653809 671.27972412]
[275.36148071 680.64050293]
[260.63946533 673.41589355]
[259.80526733 657.03796387]
[251.24313354 644.72174072]
[242.68101501 632.40545654]
[229.06320190 626.37182617]
[227.53890991 610.62420654]
[218.97679138 598.30798340]
[210.41465759 585.99176025]
[200.85705566 588.82196045]
[190.87609863 589.10321045]
[181.14106750 586.80792236]
[172.30696106 582.08142090]
[164.97048950 575.23315430]
[159.62973022 566.71600342]
[156.65036011 557.09661865]
[156.24058533 547.01770020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[28 143]
[30 141]
[31 140]
[32 139]
[33 138]
[36 136]
[37 135]
[38 134]
[48 133]
[49 132]
[50 131]
[51 130]
[52 129]
[53 128]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 76]
[61 75]
[62 74]
[77 92]
[78 91]
[79 90]
[80 89]
[96 118]
[97 117]
[98 116]
[99 115]
[155 172]
[156 171]
[157 170]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
