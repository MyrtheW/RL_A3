%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.18
%%CreationDate: Sat May 01 21:31:35 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGAUAGAAUGUUAAAUGACAGGCAUCCCUCUUUAGAGAAAUGCUCCGGCGCUAGUGUCAUUUUCUCUACAGCCUCUCCCUGUUGUCUGGCGACUGUAUUGCAUCAUGAUGUUCUGUCGCACAUCUAUAUACUAAUUGGAGAGCGCAAUCUUUGUGCUCUGUCGCAGCUUCGUAUAC\
) } def
/len { sequence length } bind def

/coor [
[171.02679443 103.22933197]
[183.83697510 95.42218018]
[168.85110474 94.77150726]
[153.86521912 94.12082672]
[138.87933350 93.47014618]
[123.89345551 92.81946564]
[118.44010925 113.98628998]
[99.59583282 121.33547211]
[84.00006866 111.20692444]
[69.35172272 114.43585968]
[54.70338058 117.66480255]
[40.05503845 120.89374542]
[50.99223328 131.15910339]
[49.96331024 146.12377930]
[37.72405624 154.79560852]
[23.26468468 150.80479431]
[17.20617485 137.08274841]
[23.99861526 123.70896149]
[9.12552929 125.65609741]
[-5.74755526 127.60323334]
[-20.62063980 129.55036926]
[-35.49372482 131.49751282]
[-50.36680984 133.44464111]
[-65.23989868 135.39178467]
[-79.88823700 138.62072754]
[-94.20158386 143.10716248]
[-108.51493073 147.59361267]
[-122.82827759 152.08004761]
[-137.14161682 156.56648254]
[-144.50659180 170.29219055]
[-159.08625793 174.63818359]
[-172.12623596 167.53222656]
[-186.43959045 172.01866150]
[-200.75292969 176.50509644]
[-211.44805908 188.93676758]
[-227.50930786 185.62487793]
[-232.41423035 169.97644043]
[-221.11706543 158.08920288]
[-205.23936462 162.19175720]
[-190.92602539 157.70532227]
[-176.61268616 153.21887207]
[-169.96191406 139.94096375]
[-155.51005554 135.18717957]
[-141.62806702 142.25314331]
[-127.31471252 137.76669312]
[-113.00136566 133.28025818]
[-98.68802643 128.79382324]
[-84.37467957 124.30738068]
[-98.49082947 119.23447418]
[-108.26691437 107.85782623]
[-111.15795898 93.13906860]
[-106.41136169 78.90988159]
[-95.26277161 68.87449646]
[-80.61446381 65.64538574]
[-66.27978516 70.06316376]
[-55.99040985 80.97778320]
[-52.42494583 95.54787445]
[-56.51157379 109.98045349]
[-67.18703461 120.51869965]
[-52.31394577 118.57156372]
[-37.44086075 116.62442780]
[-22.56777763 114.67729187]
[-7.69469261 112.73014832]
[7.17839241 110.78301239]
[22.05147743 108.83587646]
[36.82609940 106.24539948]
[51.47444153 103.01645660]
[66.12278748 99.78752136]
[80.77112579 96.55857849]
[82.63699341 87.59468842]
[88.75908661 79.76894379]
[98.40734863 75.10179138]
[92.57701874 61.28125381]
[86.74668884 47.46071625]
[80.91635895 33.64017868]
[65.91996002 29.20825195]
[57.32397461 16.14521027]
[59.18716812 0.61902207]
[70.62979889 -10.03932190]
[86.24900055 -10.79727745]
[98.66986847 -1.29696119]
[102.02764893 13.97586823]
[94.73690033 27.80984688]
[100.56723022 41.63038635]
[106.39756012 55.45092392]
[112.22789001 69.27146149]
[124.54413605 77.83358765]
[139.53001404 78.48426819]
[154.51589966 79.13494873]
[169.50178528 79.78562164]
[184.48765564 80.43630219]
[194.41435242 75.56845093]
[203.56417847 79.10973358]
[218.31576538 76.39113617]
[233.06735229 73.67253876]
[247.81892395 70.95394135]
[262.57052612 68.23534393]
[261.44656372 49.75334167]
[278.55053711 31.77545738]
[290.48379517 22.68712807]
[302.41702271 13.59879684]
[314.35028076 4.51046705]
[299.70764160 1.25575078]
[291.51998901 -11.31255531]
[294.46008301 -26.02159309]
[306.85000610 -34.47676468]
[321.61868286 -31.85261917]
[330.33749390 -19.64678192]
[328.03009033 -4.82456303]
[340.84344482 -12.62315750]
[353.58862305 -20.53265762]
[366.26470947 -28.55246544]
[378.94076538 -36.57227325]
[391.61682129 -44.59208298]
[404.29290771 -52.61188889]
[405.15429688 -68.10503387]
[414.98391724 -80.11164093]
[430.00204468 -84.01490784]
[444.43389893 -78.31396484]
[452.73016357 -65.20093536]
[451.70074463 -49.71804047]
[441.74145508 -37.81877899]
[426.68188477 -34.07865524]
[412.31271362 -39.93582153]
[399.63662720 -31.91601562]
[386.96057129 -23.89620590]
[374.28451538 -15.87639809]
[361.60842896 -7.85658979]
[357.62619019 -1.60643637]
[348.64202881 0.19019191]
[335.82867432 7.98878670]
[323.43859863 16.44370842]
[311.50537109 25.53203773]
[299.57211304 34.62036896]
[287.63888550 43.70869827]
[287.83410645 51.20615768]
[302.66369629 48.95149612]
[317.25994873 45.49465179]
[325.95657349 57.71628571]
[317.90719604 70.37358093]
[303.15142822 67.68083954]
[288.22460938 66.20107269]
[288.41986084 73.69853210]
[300.80993652 82.15345764]
[313.20001221 90.60837555]
[325.59011841 99.06330109]
[337.98019409 107.51821899]
[350.37030029 115.97314453]
[362.76037598 124.42806244]
[375.15045166 132.88298035]
[387.54055786 141.33790588]
[404.03186035 145.27149963]
[404.81723022 162.20724487]
[388.76077271 167.65022278]
[379.08563232 153.72799683]
[366.69555664 145.27307129]
[354.30545044 136.81814575]
[341.91537476 128.36323547]
[329.52526855 119.90830994]
[317.13519287 111.45338440]
[304.74508667 102.99846649]
[292.35501099 94.54354095]
[279.96493530 86.08862305]
[265.28912354 82.98692322]
[250.53752136 85.70552063]
[235.78594971 88.42412567]
[221.03436279 91.14272308]
[206.28277588 93.86132050]
[220.04878235 99.81927490]
[230.61724854 110.46387482]
[236.47625732 124.27227783]
[236.78759766 139.26904297]
[231.50672913 153.30871582]
[221.38914490 164.38276672]
[207.88229370 170.90692139]
[192.91844177 171.94784546]
[178.63838196 167.35658264]
[167.08499146 157.79000854]
[159.91114807 144.61669922]
[158.14314270 129.72126770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 91]
[3 90]
[4 89]
[5 88]
[6 87]
[9 69]
[10 68]
[11 67]
[12 66]
[18 65]
[19 64]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[32 41]
[33 40]
[34 39]
[72 86]
[73 85]
[74 84]
[75 83]
[93 168]
[94 167]
[95 166]
[96 165]
[97 164]
[99 135]
[100 134]
[101 133]
[102 132]
[109 131]
[110 130]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[143 163]
[144 162]
[145 161]
[146 160]
[147 159]
[148 158]
[149 157]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
